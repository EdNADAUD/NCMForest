<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.19.1209.0952                               -->
<workbook original-version='10.5' source-build='10.5.22 (10500.19.1209.0952)' source-platform='mac' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='rapport_manu' inline='true' name='federated.0q3b7ws1qgaikd1cswzuc1vanm1m' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020-01-28-17-43_rapport' name='excel-direct.0v4cbs90iy4qkl11hgtkd1y8m0cr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/ludoviccarlu/Downloads/2020-01-28-17-43_rapport.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0v4cbs90iy4qkl11hgtkd1y8m0cr' name='2020-01-28-17-43_rapport' table='[&apos;2020-01-28-17-43_rapport$&apos;]' type='table'>
          <columns gridOrigin='A1:N331:no:A1:N331:0' header='yes' outcome='2'>
            <column datatype='integer' name='n_trees' ordinal='0' />
            <column datatype='real' name='method_k_bis' ordinal='1' />
            <column datatype='string' name='method_max_features' ordinal='2' />
            <column datatype='string' name='distance' ordinal='3' />
            <column datatype='string' name='method_split' ordinal='4' />
            <column datatype='integer' name='min_samples_leaf' ordinal='5' />
            <column datatype='integer' name='min_samples_split' ordinal='6' />
            <column datatype='integer' name='max_depth' ordinal='7' />
            <column datatype='real' name='score_train' ordinal='8' />
            <column datatype='real' name='score_test' ordinal='9' />
            <column datatype='real' name='avg_depth' ordinal='10' />
            <column datatype='real' name='avg_size' ordinal='11' />
            <column datatype='real' name='fit_time' ordinal='12' />
            <column datatype='real' name='predict_time' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>n_trees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n_trees]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>n_trees</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method_k_bis</remote-name>
            <remote-type>5</remote-type>
            <local-name>[method_k_bis]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>method_k_bis</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method_max_features</remote-name>
            <remote-type>130</remote-type>
            <local-name>[method_max_features]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>method_max_features</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method_split</remote-name>
            <remote-type>130</remote-type>
            <local-name>[method_split]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>method_split</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_samples_leaf</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_samples_leaf]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>min_samples_leaf</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>min_samples_split</remote-name>
            <remote-type>20</remote-type>
            <local-name>[min_samples_split]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>min_samples_split</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_depth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_depth]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>max_depth</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score_train</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score_train]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>score_train</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>score_test</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score_test]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>score_test</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_depth]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>avg_depth</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_size</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_size]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>avg_size</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fit_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fit_time]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>fit_time</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predict_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predict_time]</local-name>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias>predict_time</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2020-01-28-17-43_rapport]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N331:no:A1:N331:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Avg Depth' datatype='real' name='[avg_depth]' role='measure' type='quantitative' />
      <column caption='Avg Size' datatype='real' name='[avg_size]' role='measure' type='quantitative' />
      <column caption='Distance' datatype='string' name='[distance]' role='dimension' type='nominal' />
      <column caption='Fit Time' datatype='real' name='[fit_time]' role='measure' type='quantitative' />
      <column caption='Max Depth' datatype='integer' name='[max_depth]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Method K Bis' datatype='real' name='[method_k_bis]' role='dimension' type='ordinal' />
      <column caption='Method Max Features' datatype='string' name='[method_max_features]' role='dimension' type='nominal' />
      <column caption='Method Split' datatype='string' name='[method_split]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Min Samples Leaf' datatype='integer' name='[min_samples_leaf]' role='dimension' type='ordinal' />
      <column caption='Min Samples Split' datatype='integer' name='[min_samples_split]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='N Trees' datatype='integer' name='[n_trees]' role='dimension' type='ordinal' />
      <column caption='Predict Time' datatype='real' name='[predict_time]' role='measure' type='quantitative' />
      <column caption='Score Test' datatype='real' name='[score_test]' role='measure' type='quantitative' />
      <column caption='Score Train' datatype='real' name='[score_train]' role='measure' type='quantitative' />
      <group caption='Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)' hidden='true' name='[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[method_k_bis]' />
          <groupfilter function='level-members' level='[method_max_features]' />
          <groupfilter function='level-members' level='[method_split]' />
          <groupfilter function='level-members' level='[min_samples_leaf]' />
          <groupfilter function='level-members' level='[n_trees]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.525084' measure-ordering='alphabetic' measure-percentage='0.474916' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <actions>
    <action caption='Filtre 1 (généré)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='rapport manu' type='sheet' worksheet='score test' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='rapport manu' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='fit time'>
      <table>
        <view>
          <datasources>
            <datasource caption='rapport_manu' name='federated.0q3b7ws1qgaikd1cswzuc1vanm1m' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3b7ws1qgaikd1cswzuc1vanm1m'>
            <column-instance column='[fit_time]' derivation='Avg' name='[avg:fit_time:qk]' pivot='key' type='quantitative' />
            <column caption='Distance' datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column caption='Fit Time' datatype='real' name='[fit_time]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Method K Bis' datatype='real' name='[method_k_bis]' role='dimension' type='ordinal' />
            <column caption='Method Max Features' datatype='string' name='[method_max_features]' role='dimension' type='nominal' />
            <column caption='Method Split' datatype='string' name='[method_split]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Min Samples Leaf' datatype='integer' name='[min_samples_leaf]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='N Trees' datatype='integer' name='[n_trees]' role='dimension' type='ordinal' />
            <column-instance column='[distance]' derivation='None' name='[none:distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_k_bis]' derivation='None' name='[none:method_k_bis:ok]' pivot='key' type='ordinal' />
            <column-instance column='[method_max_features]' derivation='None' name='[none:method_max_features:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_split]' derivation='None' name='[none:method_split:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_samples_leaf]' derivation='None' name='[none:min_samples_leaf:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_trees]' derivation='None' name='[none:n_trees:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[method_k_bis]' />
              <groupfilter function='level-members' level='[method_max_features]' />
              <groupfilter function='level-members' level='[method_split]' />
              <groupfilter function='level-members' level='[min_samples_leaf]' />
              <groupfilter function='level-members' level='[n_trees]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]' num-steps='6' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]))</rows>
        <cols>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='predict time'>
      <table>
        <view>
          <datasources>
            <datasource caption='rapport_manu' name='federated.0q3b7ws1qgaikd1cswzuc1vanm1m' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3b7ws1qgaikd1cswzuc1vanm1m'>
            <column-instance column='[predict_time]' derivation='Avg' name='[avg:predict_time:qk]' pivot='key' type='quantitative' />
            <column caption='Distance' datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Method K Bis' datatype='real' name='[method_k_bis]' role='dimension' type='ordinal' />
            <column caption='Method Max Features' datatype='string' name='[method_max_features]' role='dimension' type='nominal' />
            <column caption='Method Split' datatype='string' name='[method_split]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Min Samples Leaf' datatype='integer' name='[min_samples_leaf]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='N Trees' datatype='integer' name='[n_trees]' role='dimension' type='ordinal' />
            <column-instance column='[distance]' derivation='None' name='[none:distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_k_bis]' derivation='None' name='[none:method_k_bis:ok]' pivot='key' type='ordinal' />
            <column-instance column='[method_max_features]' derivation='None' name='[none:method_max_features:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_split]' derivation='None' name='[none:method_split:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_samples_leaf]' derivation='None' name='[none:min_samples_leaf:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_trees]' derivation='None' name='[none:n_trees:ok]' pivot='key' type='ordinal' />
            <column caption='Predict Time' datatype='real' name='[predict_time]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[method_k_bis]' />
              <groupfilter function='level-members' level='[method_max_features]' />
              <groupfilter function='level-members' level='[method_split]' />
              <groupfilter function='level-members' level='[min_samples_leaf]' />
              <groupfilter function='level-members' level='[n_trees]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]' num-steps='6' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]))</rows>
        <cols>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='score test'>
      <table>
        <view>
          <datasources>
            <datasource caption='rapport_manu' name='federated.0q3b7ws1qgaikd1cswzuc1vanm1m' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3b7ws1qgaikd1cswzuc1vanm1m'>
            <column-instance column='[score_test]' derivation='Avg' name='[avg:score_test:qk]' pivot='key' type='quantitative' />
            <column caption='Distance' datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Method K Bis' datatype='real' name='[method_k_bis]' role='dimension' type='ordinal' />
            <column caption='Method Max Features' datatype='string' name='[method_max_features]' role='dimension' type='nominal' />
            <column caption='Method Split' datatype='string' name='[method_split]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Min Samples Leaf' datatype='integer' name='[min_samples_leaf]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='N Trees' datatype='integer' name='[n_trees]' role='dimension' type='ordinal' />
            <column-instance column='[distance]' derivation='None' name='[none:distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_k_bis]' derivation='None' name='[none:method_k_bis:ok]' pivot='key' type='ordinal' />
            <column-instance column='[method_max_features]' derivation='None' name='[none:method_max_features:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_split]' derivation='None' name='[none:method_split:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_samples_leaf]' derivation='None' name='[none:min_samples_leaf:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_trees]' derivation='None' name='[none:n_trees:ok]' pivot='key' type='ordinal' />
            <column caption='Score Test' datatype='real' name='[score_test]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.92949999999999999' field='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]' num-steps='6' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]))</rows>
        <cols>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='score train'>
      <table>
        <view>
          <datasources>
            <datasource caption='rapport_manu' name='federated.0q3b7ws1qgaikd1cswzuc1vanm1m' />
          </datasources>
          <datasource-dependencies datasource='federated.0q3b7ws1qgaikd1cswzuc1vanm1m'>
            <column-instance column='[avg_depth]' derivation='Avg' name='[avg:avg_depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg_size]' derivation='Avg' name='[avg:avg_size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fit_time]' derivation='Avg' name='[avg:fit_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predict_time]' derivation='Avg' name='[avg:predict_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[score_test]' derivation='Avg' name='[avg:score_test:qk]' pivot='key' type='quantitative' />
            <column-instance column='[score_train]' derivation='Avg' name='[avg:score_train:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Depth' datatype='real' name='[avg_depth]' role='measure' type='quantitative' />
            <column caption='Avg Size' datatype='real' name='[avg_size]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='string' name='[distance]' role='dimension' type='nominal' />
            <column caption='Fit Time' datatype='real' name='[fit_time]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Method K Bis' datatype='real' name='[method_k_bis]' role='dimension' type='ordinal' />
            <column caption='Method Max Features' datatype='string' name='[method_max_features]' role='dimension' type='nominal' />
            <column caption='Method Split' datatype='string' name='[method_split]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Min Samples Leaf' datatype='integer' name='[min_samples_leaf]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='N Trees' datatype='integer' name='[n_trees]' role='dimension' type='ordinal' />
            <column-instance column='[distance]' derivation='None' name='[none:distance:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_k_bis]' derivation='None' name='[none:method_k_bis:ok]' pivot='key' type='ordinal' />
            <column-instance column='[method_max_features]' derivation='None' name='[none:method_max_features:nk]' pivot='key' type='nominal' />
            <column-instance column='[method_split]' derivation='None' name='[none:method_split:nk]' pivot='key' type='nominal' />
            <column-instance column='[min_samples_leaf]' derivation='None' name='[none:min_samples_leaf:ok]' pivot='key' type='ordinal' />
            <column-instance column='[n_trees]' derivation='None' name='[none:n_trees:ok]' pivot='key' type='ordinal' />
            <column caption='Predict Time' datatype='real' name='[predict_time]' role='measure' type='quantitative' />
            <column caption='Score Test' datatype='real' name='[score_test]' role='measure' type='quantitative' />
            <column caption='Score Train' datatype='real' name='[score_train]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[method_k_bis]' />
              <groupfilter function='level-members' level='[method_max_features]' />
              <groupfilter function='level-members' level='[method_split]' />
              <groupfilter function='level-members' level='[min_samples_leaf]' />
              <groupfilter function='level-members' level='[n_trees]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[Action (Method K Bis,Method Max Features,Method Split,Min Samples Leaf,N Trees)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.92949999999999999' field='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_train:qk]' num-steps='6' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_train:qk]' />
              <tooltip column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]' />
              <tooltip column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]' />
              <tooltip column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]' />
              <tooltip column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:avg_size:qk]' />
              <tooltip column='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:avg_depth:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]))</rows>
        <cols>([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok] / ([federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok] / [federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='rapport manu'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98200' id='5' param='horz' type='layout-flow' w='99064' x='468' y='900'>
            <zone h='98200' id='3' type='layout-basic' w='89702' x='468' y='900'>
              <zone h='49100' id='1' name='score train' w='44852' x='468' y='900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49100' id='7' name='score test' w='44850' x='45320' y='900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49100' id='9' name='fit time' w='44852' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49100' id='11' name='predict time' w='44850' x='45320' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98200' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90170' y='900'>
              <zone h='7312' id='6' name='score train' pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_train:qk]' type='color' w='9362' x='90170' y='900'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7312' id='8' name='score test' pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]' type='color' w='9362' x='90170' y='8212'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7312' id='10' name='fit time' pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]' type='color' w='9362' x='90170' y='15524'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7312' id='12' name='predict time' pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]' type='color' w='9362' x='90170' y='22836'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='score train'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_train:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_train:qk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_split:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='score test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:score_test:qk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_split:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='fit time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:fit_time:qk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_split:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='predict time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[avg:predict_time:qk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:distance:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_k_bis:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_max_features:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:method_split:nk]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_leaf:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:min_samples_split:ok]</field>
            <field>[federated.0q3b7ws1qgaikd1cswzuc1vanm1m].[none:n_trees:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='rapport manu'>
      <viewpoints>
        <viewpoint name='fit time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='predict time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='score test'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='score train'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='fit time' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='predict time' width='192'>
      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
      bl95C7SU+b9PDydLFdLSiAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rapport manu' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='score test' width='192'>
      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
      Ev5mAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='score train' width='192'>
      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
      gW7+P7ED3iuCa3A2AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
